import PropTypes from "prop-types";

export const Hotline = ({ size, color }) => {
  return (
    <div
      style={{
        width: size,
        height: size,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <svg
        width={size}
        height={size}
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M17.5 14.2966V10.1299C17.5 5.98775 14.1421 2.62988 10 2.62988C5.85786 2.62988 2.5 5.98775 2.5 10.1299V14.2966"
          stroke={color}
          strokeWidth="1.5"
        />
        <path
          d="M18.3335 13.0469V14.7135"
          stroke={color}
          strokeWidth="1.5"
          strokeLinecap="round"
        />
        <path
          d="M1.6665 13.0469V14.7135"
          stroke={color}
          strokeWidth="1.5"
          strokeLinecap="round"
        />
        <path
          d="M6.66667 11.6671C6.66667 11.0301 6.66667 10.7116 6.52105 10.4901C6.44778 10.3787 6.35051 10.2866 6.237 10.2211C6.01143 10.0912 5.70677 10.1212 5.09745 10.1813C4.07073 10.2825 3.55736 10.3331 3.18948 10.6103C3.00329 10.7505 2.84698 10.9293 2.73038 11.1355C2.5 11.5428 2.5 12.0795 2.5 13.1529V14.4576C2.5 15.5203 2.5 16.0517 2.73498 16.462C2.82293 16.6156 2.93317 16.7541 3.0618 16.8727C3.40544 17.1893 3.90703 17.2883 4.91023 17.4861C5.6162 17.6253 5.96918 17.6949 6.2297 17.5483C6.32583 17.4942 6.4108 17.421 6.47977 17.3327C6.66667 17.0936 6.66667 16.7197 6.66667 15.9719V11.6671Z"
          stroke={color}
          strokeWidth="1.5"
        />
        <path
          d="M13.3335 11.6671C13.3335 11.0301 13.3335 10.7116 13.4791 10.4901C13.5524 10.3787 13.6497 10.2866 13.7632 10.2211C13.9887 10.0912 14.2934 10.1212 14.9027 10.1813C15.9294 10.2825 16.4428 10.3331 16.8107 10.6103C16.9969 10.7505 17.1532 10.9293 17.2698 11.1355C17.5002 11.5428 17.5002 12.0795 17.5002 13.1529V14.4576C17.5002 15.5203 17.5002 16.0517 17.2652 16.462C17.1772 16.6156 17.067 16.7541 16.9384 16.8727C16.5947 17.1893 16.0931 17.2883 15.0899 17.4861C14.384 17.6253 14.031 17.6949 13.7705 17.5483C13.6743 17.4942 13.5894 17.421 13.5204 17.3327C13.3335 17.0936 13.3335 16.7197 13.3335 15.9719V11.6671Z"
          stroke={color}
          strokeWidth="1.5"
        />
      </svg>
    </div>
  );
};

export const LocationPin = ({ size, color }) => {
  return (
    <div
      style={{
        width: size,
        height: size,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <svg
        width={size}
        height={size}
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M3.3335 8.58295C3.3335 4.83511 6.31826 1.79688 10.0002 1.79688C13.6821 1.79688 16.6668 4.83511 16.6668 8.58295C16.6668 12.3014 14.5391 16.6406 11.2193 18.1922C10.4454 18.554 9.55495 18.554 8.78105 18.1922C5.46127 16.6406 3.3335 12.3014 3.3335 8.58295Z"
          stroke={color}
          strokeWidth="1.5"
        />
        <ellipse
          cx="10"
          cy="8.46289"
          rx="2.5"
          ry="2.5"
          stroke={color}
          strokeWidth="1.5"
        />
      </svg>
    </div>
  );
};

export const Phone = ({ size, color }) => {
  return (
    <div
      style={{
        width: size,
        height: size,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <svg
        width={size}
        height={size}
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M11.25 1.79688C11.25 1.79688 13.1945 1.97365 15.6694 4.44853C18.1443 6.9234 18.3211 8.86794 18.3211 8.86794"
          stroke={color}
          strokeWidth="1.5"
          strokeLinecap="round"
        />
        <path
          d="M11.8394 4.74316C11.8394 4.74316 12.6643 4.97887 13.9018 6.2163C15.1392 7.45374 15.3749 8.2787 15.3749 8.2787"
          stroke={color}
          strokeWidth="1.5"
          strokeLinecap="round"
        />
        <path
          d="M12.5839 12.6526L12.0401 12.136H12.0401L12.5839 12.6526ZM12.9635 12.253L13.5073 12.7695L12.9635 12.253ZM14.9774 11.9735L14.6032 12.6235H14.6032L14.9774 11.9735ZM16.5694 12.8899L16.1953 13.5399L16.5694 12.8899ZM17.0181 15.7619L17.5619 16.2784L17.0181 15.7619ZM15.8343 17.0082L15.2905 16.4917L15.8343 17.0082ZM14.7302 17.5991L14.8039 18.3455L14.7302 17.5991ZM6.5128 13.8592L7.05659 13.3427L6.5128 13.8592ZM2.50241 5.93483L1.75348 5.97503L1.75348 5.97503L2.50241 5.93483ZM7.89793 7.21581L8.44173 7.73233L7.89793 7.21581ZM8.02853 4.87413L8.64093 4.44115V4.44115L8.02853 4.87413ZM6.97771 3.3879L6.36532 3.82088L6.36532 3.82088L6.97771 3.3879ZM4.38454 3.13708L4.92834 3.6536L4.92834 3.6536L4.38454 3.13708ZM3.07654 4.51416L2.53275 3.99765L2.53275 3.99765L3.07654 4.51416ZM9.21927 11.0098L9.76306 10.4933L9.21927 11.0098ZM12.5839 12.6526L13.1277 13.1691L13.5073 12.7695L12.9635 12.253L12.4197 11.7365L12.0401 12.136L12.5839 12.6526ZM14.9774 11.9735L14.6032 12.6235L16.1953 13.5399L16.5694 12.8899L16.9436 12.2399L15.3515 11.3235L14.9774 11.9735ZM17.0181 15.7619L16.4743 15.2454L15.2905 16.4917L15.8343 17.0082L16.3781 17.5247L17.5619 16.2784L17.0181 15.7619ZM14.7302 17.5991L14.6566 16.8528C13.4931 16.9676 10.413 16.8763 7.05659 13.3427L6.5128 13.8592L5.96901 14.3757C9.69059 18.2938 13.2516 18.4987 14.8039 18.3455L14.7302 17.5991ZM6.5128 13.8592L7.05659 13.3427C3.84791 9.96455 3.31734 7.12453 3.25133 5.89463L2.50241 5.93483L1.75348 5.97503C1.83772 7.54433 2.50328 10.727 5.96901 14.3757L6.5128 13.8592ZM7.65892 7.46744L8.20271 7.98396L8.44173 7.73233L7.89793 7.21581L7.35414 6.69929L7.11513 6.95093L7.65892 7.46744ZM8.02853 4.87413L8.64093 4.44115L7.59011 2.95491L6.97771 3.3879L6.36532 3.82088L7.41614 5.30712L8.02853 4.87413ZM4.38454 3.13708L3.84075 2.62057L2.53275 3.99765L3.07654 4.51416L3.62033 5.03068L4.92834 3.6536L4.38454 3.13708ZM7.65892 7.46744C7.11513 6.95093 7.11443 6.95166 7.11374 6.95239C7.1135 6.95264 7.1128 6.95338 7.11233 6.95389C7.11139 6.95489 7.11043 6.95592 7.10945 6.95697C7.10751 6.95906 7.1055 6.96124 7.10345 6.9635C7.09934 6.96802 7.09501 6.97287 7.0905 6.97806C7.08147 6.98844 7.07167 7.00018 7.06128 7.01331C7.0405 7.03957 7.01733 7.07141 6.99323 7.10908C6.94488 7.18463 6.89328 7.28285 6.84984 7.40492C6.76135 7.65358 6.71527 7.97723 6.77358 8.37514C6.88784 9.15495 7.39437 10.1776 8.67547 11.5263L9.21927 11.0098L9.76306 10.4933C8.58166 9.24949 8.30802 8.50092 8.25773 8.15769C8.23376 7.99408 8.25931 7.91825 8.26303 7.9078C8.26569 7.90032 8.26533 7.90408 8.2567 7.91756C8.25246 7.92419 8.24627 7.9331 8.2375 7.94418C8.23311 7.94972 8.22808 7.95581 8.22231 7.96244C8.21943 7.96575 8.21636 7.9692 8.2131 7.97279C8.21147 7.97458 8.20979 7.97641 8.20806 7.97827C8.20719 7.9792 8.20632 7.98014 8.20542 7.98109C8.20498 7.98156 8.2043 7.98228 8.20408 7.98252C8.2034 7.98324 8.20271 7.98396 7.65892 7.46744ZM9.21927 11.0098L8.67547 11.5263C9.95208 12.8703 10.934 13.4185 11.7048 13.5437C12.1018 13.6081 12.4283 13.5573 12.6797 13.4581C12.8023 13.4098 12.9 13.3527 12.9742 13.3001C13.0113 13.2738 13.0424 13.2487 13.0678 13.2264C13.0805 13.2152 13.0918 13.2048 13.1018 13.1952C13.1068 13.1903 13.1114 13.1858 13.1157 13.1814C13.1179 13.1792 13.12 13.1771 13.122 13.175C13.123 13.174 13.124 13.173 13.1249 13.172C13.1254 13.1715 13.1261 13.1708 13.1263 13.1705C13.127 13.1698 13.1277 13.1691 12.5839 12.6526C12.0401 12.136 12.0408 12.1353 12.0415 12.1346C12.0417 12.1344 12.0424 12.1336 12.0429 12.1332C12.0438 12.1322 12.0447 12.1313 12.0455 12.1304C12.0473 12.1286 12.0491 12.1268 12.0508 12.1251C12.0542 12.1216 12.0575 12.1183 12.0607 12.1152C12.0671 12.1091 12.0731 12.1036 12.0786 12.0988C12.0896 12.0891 12.0989 12.0819 12.1065 12.0765C12.1217 12.0657 12.1297 12.0626 12.1293 12.0628C12.1293 12.0628 12.1173 12.0676 12.0904 12.0704C12.0635 12.0733 12.0162 12.0746 11.9453 12.0631C11.6494 12.015 10.949 11.7418 9.76306 10.4933L9.21927 11.0098ZM6.97771 3.3879L7.59011 2.95491C6.70368 1.70118 4.92118 1.48308 3.84075 2.62057L4.38454 3.13708L4.92834 3.6536C5.30542 3.2566 5.98013 3.27608 6.36532 3.82088L6.97771 3.3879ZM2.50241 5.93483L3.25133 5.89463C3.23577 5.60474 3.36121 5.30348 3.62033 5.03068L3.07654 4.51416L2.53275 3.99765C2.06917 4.48571 1.71032 5.17077 1.75348 5.97503L2.50241 5.93483ZM15.8343 17.0082L15.2905 16.4917C15.0716 16.7221 14.8544 16.8332 14.6566 16.8528L14.7302 17.5991L14.8039 18.3455C15.4651 18.2802 15.9949 17.9281 16.3781 17.5247L15.8343 17.0082ZM7.89793 7.21581L8.44173 7.73233C9.29154 6.83763 9.34892 5.44251 8.64093 4.44115L8.02853 4.87413L7.41614 5.30712C7.73555 5.75887 7.68191 6.35421 7.35414 6.69929L7.89793 7.21581ZM16.5694 12.8899L16.1953 13.5399C16.8117 13.8947 16.9272 14.7685 16.4743 15.2454L17.0181 15.7619L17.5619 16.2784C18.707 15.0728 18.372 13.062 16.9436 12.2399L16.5694 12.8899ZM12.9635 12.253L13.5073 12.7695C13.7878 12.4742 14.2248 12.4057 14.6032 12.6235L14.9774 11.9735L15.3515 11.3235C14.3873 10.7685 13.1885 10.927 12.4197 11.7365L12.9635 12.253Z"
          fill={color}
        />
      </svg>
    </div>
  );
};

export const Email = ({ size, color }) => {
  return (
    <div
      style={{
        width: size,
        height: size,
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <svg
        width={size}
        height={size}
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M1.6665 10.1296C1.6665 6.98686 1.6665 5.41551 2.64281 4.4392C3.61913 3.46289 5.19047 3.46289 8.33317 3.46289H11.6665C14.8092 3.46289 16.3805 3.46289 17.3569 4.4392C18.3332 5.41551 18.3332 6.98686 18.3332 10.1296C18.3332 13.2723 18.3332 14.8436 17.3569 15.8199C16.3805 16.7962 14.8092 16.7962 11.6665 16.7962H8.33317C5.19047 16.7962 3.61913 16.7962 2.64281 15.8199C1.6665 14.8436 1.6665 13.2723 1.6665 10.1296Z"
          stroke={color}
          strokeWidth="1.5"
        />
        <path
          d="M5 6.79688L6.79908 8.29611C8.32961 9.57155 9.09488 10.2093 10 10.2093C10.9051 10.2093 11.6704 9.57155 13.2009 8.29611L15 6.79688"
          stroke={color}
          strokeWidth="1.5"
          strokeLinecap="round"
        />
      </svg>
    </div>
  );
};
Hotline.propTypes = {
  color: PropTypes.string.isRequired,
  size: PropTypes.string.isRequired,
};
LocationPin.propTypes = {
  color: PropTypes.string.isRequired,
  size: PropTypes.string.isRequired,
};
Email.propTypes = {
  color: PropTypes.string.isRequired,
  size: PropTypes.string.isRequired,
};
Phone.propTypes = {
  color: PropTypes.string.isRequired,
  size: PropTypes.string.isRequired,
};
